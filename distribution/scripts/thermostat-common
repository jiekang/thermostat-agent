#!/bin/bash
#
# Copyright 2012-2015 Red Hat, Inc.
#
# This file is part of Thermostat.
#
# Thermostat is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation; either version 2, or (at your
# option) any later version.
#
# Thermostat is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Thermostat; see the file COPYING.  If not see
# <http://www.gnu.org/licenses/>.
#
# Linking this code with other modules is making a combined work
# based on this code.  Thus, the terms and conditions of the GNU
# General Public License cover the whole combination.
#
# As a special exception, the copyright holders of this code give
# you permission to link this code with independent modules to
# produce an executable, regardless of the license terms of these
# independent modules, and to copy and distribute the resulting
# executable under terms of your choice, provided that you also
# meet, for each linked independent module, the terms and conditions
# of the license of that module.  An independent module is a module
# which is not derived from or based on this code.  If you modify
# this code, you may extend this exception to your version of the
# library, but you are not obligated to do so.  If you do not wish
# to do so, delete this exception statement from your version.
#
#####################################################################

_find_thermostat_home() {
  # Compute THERMOSTAT_HOME by finding the (symlink-resolved) location of the
  # currently executing code's parent dir. See
  # http://stackoverflow.com/a/246128/3561275 for implementation details.
  SOURCE="${BASH_SOURCE[0]}"
  while [ -h "$SOURCE" ]; do
    DIR="$(cd -P "$(dirname "$SOURCE")" && pwd)"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
  done
  DIR="$(cd -P "$(dirname "$SOURCE")" && cd .. && pwd)"
  echo "$DIR"
}

# set global variable for Cygwin testing
# between all shell files, we pass cygwin-compatible paths,
#    and let each script decide when to convert them.
# an exception is command line args for java programs, which
#    need to be converted to windows format at creation time
if [ "$(uname -s | cut -b1-6)" == "CYGWIN" ]; then
  ##echo "Running under Cygwin"
  export CYGWIN_MODE=1
else
  ##echo "Running under Linux"
  export CYGWIN_MODE=0
fi

if [ "$(uname -s | cut -b1-6)" == "Darwin" ]; then
  ##echo "Running under Darwin"
  export DARWIN_MODE=1
else
  ##echo "Running under Linux"
  export DARWIN_MODE=0
fi

# Thermostat home
if [[ "${THERMOSTAT_HOME}" = "" ]]; then
  THERMOSTAT_HOME="$(_find_thermostat_home)"
fi

# on cygwin, convert to Unix format
if [ $CYGWIN_MODE -eq 1 ]; then
  THERMOSTAT_HOME="`cygpath -u $THERMOSTAT_HOME`"
fi
export THERMOSTAT_HOME

# Thermostat user home
if [[ "${USER_THERMOSTAT_HOME}" = "" ]]; then
  if [ $CYGWIN_MODE -eq 1 ]; then
    USER_THERMOSTAT_HOME="`cygpath -u ${USERPROFILE}`/.thermostat-ng"
  else
    USER_THERMOSTAT_HOME="${HOME}/.thermostat-ng"
  fi
fi
export USER_THERMOSTAT_HOME

THERMOSTAT="${THERMOSTAT_HOME}/bin/thermostat"
THERMOSTAT_LIBS="${THERMOSTAT_HOME}/libs"

# Duplicated in ThermostatVmMainLabelDecorator
THERMOSTAT_MAIN="com.redhat.thermostat.main.Thermostat"

if [[ "${JAVA_HOME}" = "" ]]; then
  jdk_home_candidate="@thermostat.jdk.home@"
  if [[ -e "${jdk_home_candidate}/bin/javac" ]]; then
    JAVA_HOME="${jdk_home_candidate}"
  else
    # Got likely a JRE, but thermostat expects a full JDK, try
    # one level up and hope this will work. We check
    # if JAVA_HOME is a valid value below.
    JAVA_HOME="${jdk_home_candidate}/.."
  fi
fi

# Source system thermostat profile
. "${THERMOSTAT_HOME}/etc/thermostatrc"
# Source user thermostat profile (if any)
if [[ -f "${USER_THERMOSTAT_HOME}/etc/thermostatrc" ]]; then
  . "${USER_THERMOSTAT_HOME}/etc/thermostatrc"
fi

# Verify that JAVA_HOME is a real JDK
if [[ ! -e "${JAVA_HOME}/bin/javac" ]]; then
  echo "JAVA_HOME does not seem to be a JDK. Thermostat needs a JDK to run." 1>&2
  echo "JAVA_HOME was set to '${JAVA_HOME}'" 1>&2
  exit 2
fi

JAVA="${JAVA_HOME}/bin/java"

# on Cygwin, pass the windows path in all Java options
SYSTEM_LOG_CONFIG_FILE="${THERMOSTAT_HOME}/etc/logging.properties"
if [ -f "${SYSTEM_LOG_CONFIG_FILE}" ] ; then
  if [ $CYGWIN_MODE -eq 1 ]; then
    LOGGING_ARGS=( "-Djava.util.logging.config.file=`cygpath -w ${SYSTEM_LOG_CONFIG_FILE}`" )
  else
    LOGGING_ARGS=( "-Djava.util.logging.config.file=${SYSTEM_LOG_CONFIG_FILE}" )
  fi
fi

USER_LOG_CONFIG_FILE="${USER_THERMOSTAT_HOME}/etc/logging.properties"
if [ -f "${USER_LOG_CONFIG_FILE}" ] ; then
  if [ $CYGWIN_MODE -eq 1 ]; then
    LOGGING_ARGS=( "-Djava.util.logging.config.file=`cygpath -w ${USER_LOG_CONFIG_FILE}`" )
  else
    LOGGING_ARGS=( "-Djava.util.logging.config.file=${USER_LOG_CONFIG_FILE}" )
  fi
fi
